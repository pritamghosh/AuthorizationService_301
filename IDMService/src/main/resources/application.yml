

#security.user.name: richard
#security.user.password: password
#security.user.role: USER


#security:
#  oauth2:
#    client:
#      clientId: admin
#      clientSecret: admin 
#      access-token-validity-seconds:30
#      refresh-token-validity-seconds:300
#      authorized-grant-types: authorization_code,refresh_token,password
#      scope:toll_read,toll_report



server:
  port: 9050

spring:
    datasource:
        url: jdbc:mysql://localhost:3306/idmschema?useSSL=false
        username: root
        password: root
        driver-class-name: com.mysql.cj.jdbc.Driver

    jpa:
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5Dialect
                format_sql: true
        hibernate:
            ddl-auto: update
        show-sql: true
        generate-ddl: false
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 480817774888-avshdcjf35cm6aipse5jim11fotj0u87.apps.googleusercontent.com
              clientSecret: VmeOTlN8w5Bhjutxd9CGpLps
#              redirectUri: "{baseUrl}/login/oauth2/code/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 699126306890818
              clientSecret: aea576ed9abef8444bf1d772c4199eee
              redirectUri: "{baseUrl}/login/oauth2/code/{registrationId}"
              scope:
                - email
                - public_profile
            local:
              client-id: R2dpxQ3vPrtfgF72
              client-secret: fDw7Mpkk5czHNuSRtmhGmAGL42CaxQB9
              client-name: Auth Server
              scope: user_info
              provider: custom-provider
              redirectUri: "{baseUrl}/login/oauth2/code/{registrationId}"
              client-authentication-method: basic
              authorization-grant-type: authorization_code
          provider:
            custom-provider:
              authorizationUri: http://localhost:9055/auth/oauth/authorize
              tokenUri: http://localhost:9055/auth/oauth/token
              userInfoUri: http://localhost:9055/auth/user/me
              user-name-attribute: name
#            google:
#              authorizationUri: https://accounts.google.com/o/oauth2/auth
#              tokenUri: https://oauth2.googleapis.com/token
#              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
            
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
  